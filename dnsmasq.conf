# Specify the userid to which dnsmasq will change after startup
user=root
# Specify the group which dnsmasq will run as.
group=root

# Listen only on the specified interface(s). Dnsmasq automatically adds the
# loopback (local) interface to the list of interfaces to use
interface=br1
listen-address=172.16.15.1
listen-address=127.0.0.1
# ignore-address=10.31.49.245

# Do not listen on the specified interface.
except-interface=eno1,eno2

# Enable a network mode which is a hybrid between --bind-interfaces and the
# default. Dnsmasq binds the address of individual interfaces, allowing
# multiple dnsmasq instances, but if new interfaces or addresses appear, it
# automatically listens on those
bind-dynamic

# Do not provide DHCP or TFTP on the specified interface,
# but do provide DNS service.
no-dhcp-interface=eno1,eno2

# As a default, dnsmasq checks that unsigned DNS replies are
# legitimate: this entails possible extra queries even for
# the majority of DNS zones which are not, at the moment, signed.
# dnssec-check-unsigned=no


# Specify an alternate path for dnsmasq to record its process-id in.
# Normally /var/run/dnsmasq.pid. 
pid-file=/var/run/dnsmasq.pid

# Use the specified file to store DHCP lease information. 
dhcp-leasefile=/opt/stx/stx-dnsmasq/dnsmasq.lease

# Read DHCP host information from the specified file.
# DDNS/static dhcp host mapping
dhcp-hostsfile=/opt/stx/stx-dnsmasq/conf.d/dhcp-hostsfile

# Read the IP addresses of the upstream nameservers from <file>,
# instead of /etc/resolv.conf.
resolv-file=/opt/stx/stx-dnsmasq/resolv.conf

#read-ethers
#addn-hosts=/etc/hosts.dnsmasq
#servers-file=/etc/resolv.dnsmasq

# Configuration flags
#no-poll
# Disable negative caching. Negative caching allows dnsmasq to remember
# "no such domain" answers from upstream nameservers and answer identical
# queries without forwarding them again. 
no-negcache

# Set the size of dnsmasq's cache. The default is 150 names. Setting the
# cache size to zero disables caching. Note: huge cache size impacts
# performance. 
cache-size=1500

# Do not use ports less than that given as source for outbound DNS queries.
# min-port=4096


# All reverse lookups for private IP ranges (ie 192.168.x.x, etc) which are
# not found in /etc/hosts or the DHCP leases file are answered with
# "no such domain" rather than being forwarded upstream.
bogus-priv

# Domain options
domain=lyve.colo.seagate.com,172.16.15.0/16,local
#never forward short names to upstream DNS.
domain-needed
expand-hosts

# DHCP setup
dhcp-range=set:mgmt,172.16.15.1,172.16.16.254,255.255.0.0,600s
dhcp-range=set:ipmi,172.16.17.1,172.16.17.254,255.255.0.0,600s
dhcp-range=tag:!known,172.16.18.1,172.16.18.254,255.255.0.0,600s
dhcp-range=set:data,172.16.20.1,172.16.22.254,255.255.0.0,600s
dhcp-range=tag:br1,::1,constructor:br1,ra-names, 5m

# Read DHCP option information from the specified file.
dhcp-optsfile=/opt/stx/stx-dnsmasq/conf.d/dhcp-optsfile

# Should be set when dnsmasq is definitely the only DHCP server on a network.
dhcp-authoritative

# inspect the vendor class string and match the text to set the tag
# dhcp-vendorclass=BIOS,PXEClient:Arch:00000
# dhcp-vendorclass=UEFI32,PXEClient:Arch:00006
# dhcp-vendorclass=UEFI,PXEClient:Arch:00007
# dhcp-vendorclass=UEFI64,PXEClient:Arch:00009

# for embedded firmware often used is: vendor class: udhcp 1.21.1

### Borrowed from http://www.thekelleys.org.uk/dnsmasq/docs/dnsmasq.conf.example
# Boot for iPXE. The idea is to send two different
# filenames, the first loads iPXE, and the second tells iPXE what to
# load. The dhcp-match sets the ipxe tag for requests from iPXE.
# Important Note: the 'set:' and 'tag:!ipxe' syntax requires dnsmasq 2.53 or above.
dhcp-match=set:ipxe,175 # iPXE sends a 175 option.
# load undionly.kpxe for clients not tagged with 'ipxe'.
dhcp-boot=tag:!ipxe,undionly.kpxe
#dhcp-boot=tag:ipxe,pxelinux
pxe-prompt=,"PXE Prompt",5

# ipv4 pxe service maps
#pxe-service=tag:mgmt,X86PC,"Boot from net X86PC",pxelinux
pxe-service=x86PC,"Boot from net X86PC",pxelinux
#pxe-service=x86PC,"Boot from net X86PC undionly",undionly.kpxe
pxe-service=PC98,"Boot from net PC98", pxelinux
pxe-service=IA64_EFI,"Boot from net IA64_EFI", pxelinux
pxe-service=Alpha,"Boot from Alpha", pxelinux
pxe-service=Arc_x86,    "Boot from net Arc_x86", pxelinux
pxe-service=Intel_Lean_Client, "Boot from Intel Lean Client", pxelinux
pxe-service=IA32_EFI,   "Boot from IA32_EFI", pxelinux
pxe-service=BC_EFI,     "Boot from BC_EFI", pxelinux
pxe-service=Xscale_EFI, "Boot from Xscale_EFI",
pxe-service=X86-64_EFI,"Boot from X86-64_EFI", ipxe.exe

# Set the boot file name based on the matching tag from the vendor class (above)
#dhcp-boot=net:UEFI32,pxeboot,,172.16.15.1
#dhcp-boot=net:UEFI,ipxe.efi,,172.16.15.1
#dhcp-boot=net:UEFI64,ipxe.efi,,172.16.15.1
#  dhcp-boot=tag:mgmt,pxelinux,mgmt,172.16.15.1
# Enable dnsmasq's IPv6 Router Advertisement feature.
enable-ra
# Set non-default values for router advertisements sent via an interface. 
# The priority field for the router may be altered from the default of
# medium with eg --ra-param=eth0,high. The interval between router
# advertisements may be set (in seconds) with --ra-param=eth0,60. The
# lifetime of the route may be changed or set to zero, which allows a router
# to advertise prefixes but not a route via itself.
# --ra-parm=eth0,0,0 (A value of zero for the interval means the default
# value.) All four parameters may be set at once.
# --ra-param=eth0,mtu:1280,low,60,1200
ra-param=br1,10,600
#quiet-ra

# TFTP Options
enable-tftp
tftp-root=/opt/stx/stx-net-boot/tftpboot/

# Logging Options - log it all!
log-queries
log-dhcp
log-facility=/var/log/dnsmasq.log

cname=stx-prvsnr,mgmt.lyve.colo.seagate.com

